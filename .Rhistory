Study.Info.numTr$sys1<-droplevels(Study.Info.numTr$sys1)
unique(Study.Info.numTr$sys1)
Study.Info.numTr[Study.Info.numTr$sys1 == 'NA' & !is.na(Study.Info.numTr$sys1),'sys1']<-NA
Study.Info.numTr$sys1<-droplevels(Study.Info.numTr$sys1)
unique(Study.Info.numTr$sys1)
unique(Study.Info.numTr$habitat)
Study.Info.numTr[Study.Info.numTr$habitat == 'TEMP\n' & !is.na(Study.Info.numTr$habitat),'habitat']<-'TEMP'
Study.Info.numTr[Study.Info.numTr$habitat == 'GRAS\n' & !is.na(Study.Info.numTr$habitat),'habitat']<-'GRAS'
Study.Info.numTr[Study.Info.numTr$habitat == 'NA' & !is.na(Study.Info.numTr$habitat),'habitat']<-NA
Study.Info.numTr$habitat<-droplevels(Study.Info.numTr$habitat)
unique(Study.Info.numTr$habitat)
sum(Study.Info.Subset.DF$multivar.FD.Measure=="NA")
sum(Study.Info.numTr$multivar.FD.Measure=="NA")
sum(Study.Info.numTr$multivar.FD.Measure==NA)
colnames(Study.Info.numTr)
Study.Info.numTr$multivar.FD.Measure
Study.Info.numTr[Study.Info.numTr$multivar.FD.Measure,]
Study.Info.numTr[Study.Info.numTr$multivar.FD.Measure=="NA" & !is.na(Study.Info.numTr$multivar.FD.Measure),]
Study.Info.numTr[Study.Info.numTr$multivar.FD.Measure=="NA" & !is.na(Study.Info.numTr$multivar.FD.Measure),c("ID","multivar.FD.Measure")]
sum(Study.Info.numTr$multivar.FD.Measure=="NA" & !is.na(Study.Info.numTr$multivar.FD.Measure))
dim(Study.Info.numTr)
sum(Study.Info.numTr$multivar.FD.Measure==NA)
sum(is.na(Study.Info.numTr$multivar.FD.Measure))
colnames(Study.Info.numTr)
Study.Info.numTr[Study.Info.numTr$multivar.FD.Measure=="NA" & !is.na(Study.Info.numTr$multivar.FD.Measure),"accept.reject"]<-"reject"
Study.Info.numTr[is.na(Study.Info.numTr$multivar.FD.Measure),"accept.reject"]<-"reject"
sum(Study.Info.numTr$accept.reject=="accept")
Study.Info.Subset<-Study.Info.numTr[Study.Info.numTr$accept.reject%in%c("accept"),]
FD.Metrics.Subset<-FD.Metrics[FD.Metrics$acceptESA%in%c("accept"),]
acceptIDs<-unique(Study.Info.Subset$ID)
Trait.Info.Subset<-Trait.Info.real[Trait.Info.real$ID %in% acceptIDs,]
sum(!unique(Study.Info.Subset$ID) %in% unique(Trait.Info.Subset$ID)) #if 0, then all the IDs in studyInfo are in traitInfo
sum(!unique(Trait.Info.Subset$ID) %in% unique(Study.Info.Subset$ID)) #if 0, then all the IDs in traitInfo are in studyInfo
Study.Info.Subset.DF<-as.data.frame(Study.Info.Subset)
FD.Metrics.Subset.DF<-as.data.frame(FD.Metrics.Subset)
Trait.Info.Subset.DF<-as.data.frame(Trait.Info.Subset)
Study.Info.Subset.DF$sys1Grp<-paste(Study.Info.Subset.DF$sys1,Study.Info.Subset.DF$group, sep="_")
summ.sys1Grp<-ddply(Study.Info.Subset.DF, ~sys1Grp, summarize,n=length(unique(ID)))
sys1Grp.names<-c('aquatic animals','aquatic microbes','aquatic plants',
'terrestrial animals','terrestrial animals & plants',
'terrestrial microbes','terrestrial plants','terrestrial & aquatic animals')
summ.sys1Grp$sys1Grp.names<-sys1Grp.names
summ.sys1Grp
Study.Info.Subset.DF1<-merge(Study.Info.Subset.DF, summ.sys1Grp[,c('sys1Grp','sys1Grp.names')])
tmp<-Study.Info.Subset.DF1[,-which(colnames(Study.Info.Subset.DF1) == 'sys1Grp')]
colnames(tmp)[colnames(tmp) == 'sys1Grp.names']<-'sys1Grp'
Study.Info.Subset.DF<-tmp
Study.Info.Subset.DF[!Study.Info.Subset.DF$sys1Grp %in% c('aquatic animals','aquatic plants',
'terrestrial animals','terrestrial plants'),
'sys1Grp']<-'other'
Study.Info.Subset.DF$sys1Grp<-factor(Study.Info.Subset.DF$sys1Grp, levels=c('terrestrial plants','terrestrial animals','aquatic plants','aquatic animals','other'))
source("code/fxn_ExpandMelt.R")
df.trait.annotated<-merge(Study.Info.Subset.DF, Trait.Info.Subset.DF, by="ID", all.x=TRUE) #this should have the same number of rows
sum(!unique(Study.Info.Subset.DF$ID) %in% unique(df.trait.annotated$ID))
df.metric<-ExpandMelt(df=Study.Info.Subset.DF, varName='multivar.FD.Measure')
df.metric<-data.frame(df.metric)
df.metric$multivar.FD.Measure<-as.character(df.metric$multivar.FD.Measure)
ses.multivar<-df.metric[grepl('ses', df.metric$multivar.FD.Measure),'multivar.FD.Measure']
updated.multivar<-ldply(strsplit(ses.multivar, 'ses'))[,2]
df.metric[grepl('ses', df.metric$multivar.FD.Measure),'multivar.FD.Measure']<-updated.multivar
simp<-ddply(df.metric,~ID, summarise,
nCode=length(unique(multivar.FD.Measure)),
nCode2=length(multivar.FD.Measure)) #make sure there aren't any duplicate codes for an ID now
setnames(df.metric, 'multivar.FD.Measure','code')
FD.Metrics.Subset.DF$code<-as.character(FD.Metrics.Subset.DF$code)
u.codes<-unique(df.metric$code)
lookup.codes<-unique(FD.Metrics.Subset.DF$code)
df.metric.annotated<-merge(df.metric, FD.Metrics.Subset.DF, by="code", all.x=TRUE) #this should have the same number of rows as df.metric
df.metric.annotated$CAT_abundance<-droplevels(df.metric.annotated$CAT_abundance)
df.metric.annotated$CAT_dimension<-droplevels(df.metric.annotated$CAT_dimension)
keepCols<-c("ID",
"year",
"region.ISO3",
"sys1","habitat","group","sub.group","animal.group","sys1Grp",
"multivar.FD.Measure",
"Total.Number.Species",
"nTrait")
Study.Info.1<-Study.Info.Subset.DF[,keepCols]
fileName<-paste(filePath,"StudyInfo1.txt", sep= "/")
write.table(x=Study.Info.1, file=fileName, sep = "\t")
keepCols<-c("ID",
"TraitNum", "Trait.Name",
"Trait.Category.New",
"Trait.Source",
"Trait.Rationale",
"year",
"region.ISO3",
"sys1","habitat","group","sub.group","animal.group","sys1Grp",
"multivar.FD.Measure",
"Total.Number.Species",
"nTrait")
Trait.Info.1<-df.trait.annotated[,keepCols]
fileName<-paste(filePath,"TraitInfo1.txt", sep="/")
write.table(x=Trait.Info.1, file=fileName, sep = "\t")
keepCols<-c("ID",
"code", "name",
"CAT_dimension",
"CAT_multivarMethod",
"CAT_abundance",
"year",
"region.ISO3",
"sys1","habitat","group","sub.group","animal.group","sys1Grp",
"Total.Number.Species",
"nTrait")
Metric.Info.1<-df.metric.annotated[,keepCols]
fileName<-paste(filePath,"MetricInfo1.txt", sep="/")
write.table(x=Metric.Info.1, file=fileName, sep = "\t")
library(splitstackshape) #for cSplit()
library(plyr)
library(doBy)
library(ggplot2)
Study.Info.1<-read.delim("cleanData/StudyInfo1.txt", sep="\t", header = TRUE)
Trait.Info.1<-read.delim("cleanData/TraitInfo1.txt", sep="\t", header = TRUE)
Metric.Info.1<-read.delim("cleanData/MetricInfo1.txt", sep="\t", header = TRUE)
source("code/mytheme.R")
totalNumStudies<-length(unique(Study.Info.1$ID))
paste(totalNumStudies, 'accepted studies in the dataset') # 152 good
length(unique(Trait.Info.1$ID)) # 152 good
length(unique(Metric.Info.1$ID)) # only 149... why is that??
unique(Study.Info.1$ID)[!unique(Study.Info.1$ID) %in% unique(Metric.Info.1$ID)]
summ.SI.yr <- ddply(Study.Info.1,~year, summarise, nID=length(unique(ID)))
numStudies2014<-summ.SI.yr[summ.SI.yr$year==2014,'nID']
perc_2014<-round((numStudies2014/totalNumStudies)*100, digits=2)
paste(perc_2014, "% of studies were published last year")
df.iso<-ExpandMelt(df=Study.Info.1, varName='region.ISO3')
source("code/fxn_ExpandMelt.R")
df.iso<-ExpandMelt(df=Study.Info.1, varName='region.ISO3')
summ.SI.iso <- ddply(df.iso,~region.ISO3, summarise, nID=length(unique(ID)))
summ.SI.iso.o<-orderBy(~-nID, summ.SI.iso)
summ.SI.iso.o1<-summ.SI.iso.o[1:5,] #take only the top 10 countries
positions<-summ.SI.iso.o1$region.ISO3
Plot.iso<-ggplot(summ.SI.iso.o1, aes(x=region.ISO3, y=nID)) +
geom_bar(stat='identity') +
ylab('Count') + xlab('Top 10 Countries') +
scale_y_continuous(expand=c(0,0)) + scale_x_discrete(limits=positions) +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust=1))
df.sys1<-ExpandMelt(df=Study.Info.1, varName='sys1')
summ.SI.sys1 <- ddply(df.sys1,~ID, summarise,
presenceA=sum(sys1=='A'),
presenceT=sum(sys1=='T'))
studiesWithA<-sum(summ.SI.sys1$presenceA==1)
studiesWithT<-sum(summ.SI.sys1$presenceT==1)
totalNumStudies<-length(summ.SI.sys1$ID)
studiesWithBoth<-sum(summ.SI.sys1$presenceA==1 & summ.SI.sys1$presenceT==1)
perc_terrestrial<-round((studiesWithT/totalNumStudies)*100, digits=2)
summ.SI.sys1Grp <- ddply(Study.Info.1,~sys1Grp, summarise, nID=length(unique(ID)))
studiesWithTrPl<-summ.SI.sys1Grp[summ.SI.sys1Grp$sys1Grp=='terrestrial plants','nID']
perc_TrPl<-round((studiesWithTrPl/totalNumStudies)*100, digits=2)
Plot.numStudies.sys1Grp<-ggplot(summ.SI.sys1Grp, aes(x=sys1Grp, y=nID, fill=sys1Grp)) +
geom_bar(stat='identity') + ylab("Number of studies") +
theme_bw() + theme(axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual(name='System and Taxa',
labels=sys1Grp_labels,
values=sys1Grp_colors) +
guides(fill=FALSE)
summ.SI.sys1Grp
summ.MI.meth <- ddply(Metric.Info.1,~CAT_multivarMethod, summarise, nID=length(unique(ID)))
summ.MI.meth.o<-orderBy(~-nID, summ.MI.meth)
positions<-summ.MI.meth.o$CAT_multivarMethod
Plot.meth<-ggplot(summ.MI.meth.o, aes(x=CAT_multivarMethod, y=nID)) +
geom_bar(stat='identity') +
ylab('Number of studies') + xlab('Multivariate method') +
scale_y_continuous(expand=c(0,0), limits=c(0,85)) + scale_x_discrete(limits= positions) +
theme_bw() + theme(axis.text.x = element_text(angle=45, hjust=1))
Plot.numMeth<-ggplot(summ.MI, aes(x =nMeth)) +
geom_bar() + xlab("Number of method types") +
ylab("Number of studies") + theme_bw() +
scale_x_continuous(expand = c(0,0), breaks=0:4, limits=c(0,4)) +
scale_y_continuous(expand = c(0,0))
#First, need to summarize data by ID and FD metric
#by ID
totCode<-length(unique(Metric.Info.1$code))
totDim<-length(unique(Metric.Info.1$CAT_dimension))
totMeth<-length(unique(Metric.Info.1$CAT_multivarMethod))
summ.MI<-ddply(Metric.Info.1, ~ID, summarize,
nCode=length(unique(code)),
nDim=length(unique(CAT_dimension)),
nMeth=length(unique(CAT_multivarMethod)))
summ.MI<-merge(summ.MI, id_sys1Grp, by="ID")
#by code
summ.MI.code <- ddply(Metric.Info.1,~code, summarise,
nID=length(unique(ID)),
Dim=unique(CAT_dimension),
Meth=unique(CAT_multivarMethod),
Abund=unique(CAT_abundance),
minYear = min(year, na.rm=T))
summ.MI.code.o<-orderBy(~-nID, summ.MI.code)
summ.MI.code.o1<-summ.MI.code.o[which(summ.MI.code.o$nID >9),]
summ.MI.code.o1
#by code, by sys1Grp
summ.MI.code.sys1Grp <- ddply(Metric.Info.1,~code+sys1Grp, summarise,
nID=length(unique(ID)),
Dim=unique(CAT_dimension),
Meth=unique(CAT_multivarMethod),
Abund=unique(CAT_abundance),
minYear = min(year, na.rm=T))
GROUP<-unique(summ.MI.code.sys1Grp$sys1Grp)
topFDmetrics<-list()
i<-0
for(i in 1:length(GROUP)){
summ.grp<-summ.MI.code.sys1Grp[summ.MI.code.sys1Grp$sys1Grp == GROUP[i],]
summ.grp.o<-orderBy(~-nID, summ.grp)
topFDmetrics[[i]]<-summ.grp.o[1:6,]
}
names(topFDmetrics)<-GROUP
topFDmetrics.sys1Grp<-ldply(topFDmetrics)
#What % of studies use at least 1 of the top 6 FD metrics
Metric.Info.1$top6present<-'no' #mark the row if it has a Top6 code
Metric.Info.1[Metric.Info.1$code %in% c('Rao','FRic','FEve','FDis','FDiv', 'FD'),'top6present']<-'yes'
summ.MI.codePresence<-ddply(Metric.Info.1, ~ID, summarize, #summarize by ID
nCodes=length(unique(code)),
nameCodes=paste(unique(code), collapse='_'),
nTop6=length(top6present[top6present=='yes']),
presTop6=nTop6!=0,
nRao=length(code[code=='Rao']),
nFRic=length(code[code=='FRic']),
nFEve=length(code[code=='FEve']),
nFDis=length(code[code=='FDis']),
nFDiv=length(code[code=='FDiv']),
nFD=length(code[code=='FD']))
selection<-sum(summ.MI.codePresence$presTop6 == TRUE) #count the number of IDs
totalNumStudies<-length(summ.MI.codePresence$presTop6) #count the number of IDs
totalNumStudies
percTop6<-round((selection/totalNumStudies)*100, digits=2)
#paste(percTop6,'% of studies use at least 1 of the top 6 metrics')
#What % of studies use each of the top 6 FD metrics?
TOP6<-c('nRao','nFRic','nFEve','nFDis','nFDiv','nFD')
store<-list()
i<-0
for(i in 1:length(TOP6)){
selection<-sum(summ.MI.codePresence[,TOP6[i]]) #count the number of ID
perc<-round((selection/totalNumStudies)*100, digits=0)
store[[i]]<-paste(perc,'% of studies use', TOP6[i])
}
store
summ.MI.meth <- ddply(Metric.Info.1,~CAT_multivarMethod, summarise, nID=length(unique(ID)))
summ.MI.meth.o<-orderBy(~-nID, summ.MI.meth)
positions<-summ.MI.meth.o$CAT_multivarMethod
Plot.meth<-ggplot(summ.MI.meth.o, aes(x=CAT_multivarMethod, y=nID)) +
geom_bar(stat='identity') +
ylab('Number of studies') + xlab('Multivariate method') +
scale_y_continuous(expand=c(0,0), limits=c(0,85)) + scale_x_discrete(limits= positions) +
theme_bw() + theme(axis.text.x = element_text(angle=45, hjust=1))
Plot.numMeth<-ggplot(summ.MI, aes(x =nMeth)) +
geom_bar() + xlab("Number of method types") +
ylab("Number of studies") + theme_bw() +
scale_x_continuous(expand = c(0,0), breaks=0:4, limits=c(0,4)) +
scale_y_continuous(expand = c(0,0))
selection<-length(which(summ.MI$nMeth == 1))
selection
total<-length(unique(summ.MI$ID))
answer<-round((selection/total)*100, digits=0)
paste(answer, '% of studies use only 1 multivariate method to calculate functional diversity, e.g. ordinate, cluster, other')
only1meth<-summ.MI[summ.MI$nMeth == 1,'ID']
df.only1meth<-Metric.Info.1[Metric.Info.1$ID %in% only1meth,]
summ.MI.only1meth <- ddply(df.only1meth,~CAT_multivarMethod, summarise, nID=length(unique(ID)))
summ.MI.only1meth.o<-orderBy(~-nID, summ.MI.only1meth)
total<-sum(summ.MI.only1meth.o$nID)
ordin<-summ.MI.only1meth.o[1,'nID']
answer3<-round(((ordin)/total)*100, digits=0)
paste('Of the studies that use only 1 FD method,', answer3, '% use ordination')
summ.MI.only1meth.o
selection<-length(which(summ.MI$nCode > 1 & summ.MI$nMeth > 1))
total<-length(which(summ.MI$nCode > 1))
answer2<-round((selection/total)*100, digits=0)
paste(answer2, '% of studies that use >1 FD metric, use >1 multivariate method for calculating functional diversity, e.g. ordinate, cluster, other')
selection
total
numTraits.sys1Grp
trCatcode<-paste('cat', seq(1:15), sep="")
trCatIndex<-data.frame(trCatcode, trCat=unique(Trait.Info.1$Trait.Category.New))
summ.TI.cat <- ddply(Trait.Info.1,~ID, summarise,
cat1=sum(Trait.Category.New==trCatIndex[1,'trCat']),
cat2=sum(Trait.Category.New==trCatIndex[2,'trCat']),
cat3=sum(Trait.Category.New==trCatIndex[3,'trCat']),
cat4=sum(Trait.Category.New==trCatIndex[4,'trCat']),
cat5=sum(Trait.Category.New==trCatIndex[5,'trCat']),
cat6=sum(Trait.Category.New==trCatIndex[6,'trCat']),
cat7=sum(Trait.Category.New==trCatIndex[7,'trCat']),
cat8=sum(Trait.Category.New==trCatIndex[8,'trCat']),
cat9=sum(Trait.Category.New==trCatIndex[9,'trCat']),
cat10=sum(Trait.Category.New==trCatIndex[10,'trCat']),
cat11=sum(Trait.Category.New==trCatIndex[11,'trCat']),
cat12=sum(Trait.Category.New==trCatIndex[12,'trCat']),
cat13=sum(Trait.Category.New==trCatIndex[13,'trCat']),
cat14=sum(Trait.Category.New==trCatIndex[14,'trCat']),
cat15=sum(Trait.Category.New==trCatIndex[15,'trCat'])
)
summ.TI.cat1<-melt(summ.TI.cat, id.vars = 'ID')
setnames(summ.TI.cat1, 'variable','trCatcode')
setnames(summ.TI.cat1, 'value','numTr')
summ.TI.cat1$catPresent<-summ.TI.cat1$numTr !=0
summ.TI.cat2<-merge(summ.TI.cat1, trCatIndex, by='trCatcode')
summ.TI.cat3<-ddply(summ.TI.cat2, ~trCat, summarize, nID=length(catPresent[catPresent=='TRUE']))
summ.TI.cat3.o<-orderBy(~-nID, summ.TI.cat3)
positions<-summ.TI.cat3.o$trCat
#plot
Plot.traitCat<-ggplot(summ.TI.cat3.o, aes(x=trCat, y=nID)) +
geom_bar(stat='identity') +
ylab('Number of studies') + xlab('Trait category') +
scale_y_continuous(expand=c(0,0)) + scale_x_discrete(limits= positions) +
theme_bw() + theme(axis.text.x = element_text(angle=45, hjust=1))
Plot.traitCat
#by sys1Grp
summ.TI.cat2.1<-merge(summ.TI.cat2, id_sys1Grp)
summ.TI.cat3.1<-ddply(summ.TI.cat2.1, ~sys1Grp+trCat, summarize,
nID=length(catPresent[catPresent=='TRUE']))
summ.TI.cat3.1.o<-orderBy(~sys1Grp-nID, summ.TI.cat3.1)
summ.TI.cat3.1.o$trCat<-factor(summ.TI.cat3.1.o$trCat, levels=positions)
#plot
Plot.traitCat.sys1Grp<-ggplot(summ.TI.cat3.1.o, aes(x=trCat, y=nID, fill=sys1Grp)) +
geom_bar(stat='identity') +
ylab('Number of studies') + xlab('Trait category') +
scale_y_continuous(expand=c(0,0)) +theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual(name='System and Taxa',
labels=c(sys1Grp_labels),
values=c(sys1Grp_colors))
#Plot.traitCat.sys1Grp
#plot in facets
summ.TI.cat3.1.o.1<-subset(summ.TI.cat3.1.o, sys1Grp != 'other')
Plot.traitCat.sys1Grp2<-ggplot(summ.TI.cat3.1.o.1, aes(x=trCat, y=nID, fill=sys1Grp)) +
geom_bar(stat='identity') + facet_wrap(~sys1Grp, ncol=2, scale='free_y')+
ylab('# of studies') + xlab('Trait category') +
scale_y_continuous(expand=c(0,0)) + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual(name='System and Taxa',
labels=c(sys1Grp_labels),
values=c(sys1Grp_colors)) +
guides(fill=FALSE)
#Plot.traitCat.sys1Grp2
numTraits.sys1Grp
summ.TI.tr <- ddply(Trait.Info.1,~Trait.Category.New+Trait.Name, summarise,
nID=length(unique(ID)))
summ.TI.tr.o<-orderBy(~-nID, summ.TI.tr)
summ.TI.tr.o1<-summ.TI.tr.o[summ.TI.tr.o$nID >= 5,] #only include traits that show up in 5 or more studies
#plot
CAT<-unique(summ.TI.tr.o1$Trait.Category.New)
Plots.trait<-list()
i<-0
for(i in 1:length(CAT)){
tmp.df<-subset(summ.TI.tr.o1, Trait.Category.New == CAT[i])
positions<-tmp.df$Trait.Name
Plots.trait[[i]]<-ggplot(tmp.df, aes(x=Trait.Name, y=nID)) + geom_bar(stat='identity') +
ylab('Number of studies') + xlab('Trait name') +
scale_y_continuous(expand=c(0,0)) + scale_x_discrete(limits= positions) +
theme_bw() + theme(axis.text.x = element_text(angle=45, hjust=1)) + ggtitle(CAT[i])
}
names(Plots.trait)<-CAT
#Plots.trait[['growth allocation']] + ggtitle('Growth allocation')
#Plots.trait[['body size']] + ggtitle('Body size')
#Plots.trait[['resource use']] + ggtitle('Resource use')
#Plots.trait[['reproduction']] + ggtitle('Reproduction')
#Plots.trait[['temporal partitioning']]
#Plots.trait[['unclassified']]
#habitat trait examples
justHabitat<-summ.TI.tr[summ.TI.tr$Trait.Category.New=='habitat',]
justHabitat.o<-orderBy(~-nID, justHabitat)
#justHabitat.o[1:10,'Trait.Name']
#how many traits?
summ.TI.numTr <- ddply(Trait.Info.1,~ID, summarise,
nTrait=length(unique(Trait.Name)),
nTraitCat=length(unique(Trait.Category.New)))
summ.TI.numTr1<-merge(summ.TI.numTr, id_sys1Grp, by="ID")
#plot
medianTr<-median(summ.TI.numTr1$nTrait, na.rm=T)
numTraits.sys1Grp<-ddply(summ.TI.numTr1, ~sys1Grp, summarize,
med=median(nTrait, na.rm=T),
min=min(nTrait, na.rm=T),
max=max(nTrait, na.rm=T))
#numTraits.sys1Grp
#paste('Median =',medianTr)
summ.TI.numTr1.1<-subset(summ.TI.numTr1, sys1Grp != 'other')
Plot.numTraits.sys1Grp<-ggplot(summ.TI.numTr1.1, aes(x =nTrait, fill=sys1Grp))+
geom_histogram(binwidth=1)+xlab("Number of traits")+
facet_wrap(~sys1Grp, ncol=2, scales='free_y') +
scale_x_continuous(expand = c(0,0), limits=c(1,50), breaks=c(0,2,5,7,10, 20, 30, 40, 50)) +
scale_y_continuous(expand = c(0,0)) +
ylab("Number of studies")+ theme_bw() +
geom_vline(xintercept=medianTr, col=1, linetype=2)+
scale_fill_manual(name='System and Taxa',
labels=c(sys1Grp_labels),
values=c(sys1Grp_colors)) +
guides(fill=FALSE)
#Plot.numTraits.sys1Grp
#how many trait categories?
medianTrCat<-median(summ.TI.numTr$nTraitCat, na.rm=T)
numTrCat.sys1Grp<-ddply(summ.TI.numTr1, ~sys1Grp, summarize,
med=median(nTraitCat, na.rm=T),
min=min(nTraitCat, na.rm=T),
max=max(nTraitCat, na.rm=T))
#numTrCat.sys1Grp
Plot.numTraitCats<-ggplot(summ.TI.numTr, aes(x =nTraitCat))+
geom_histogram(binwidth=1)+xlab("Number of trait categories")+
scale_x_continuous(expand = c(0,0), breaks=c(1:10), limits=c(1,11)) +
scale_y_continuous(expand = c(0,0)) +
ylab("Number of studies") + theme_bw() +
geom_vline(xintercept=medianTrCat, col=1, linetype=2)
#Plot.numTraitCats
#paste('Median =',medianTrCat)
numTraits.sys1Grp
medianTrCat<-median(summ.TI.numTr$nTraitCat, na.rm=T)
numTrCat.sys1Grp<-ddply(summ.TI.numTr1, ~sys1Grp, summarize,
mean=mean(nTraitCat, na.rm=T),
med=median(nTraitCat, na.rm=T),
min=min(nTraitCat, na.rm=T),
max=max(nTraitCat, na.rm=T))
Plot.numTraitCats<-ggplot(summ.TI.numTr, aes(x =nTraitCat))+
geom_histogram(binwidth=1)+xlab("Number of trait categories")+
scale_x_continuous(expand = c(0,0), breaks=c(1:10), limits=c(1,11)) +
scale_y_continuous(expand = c(0,0)) +
ylab("Number of studies") + theme_bw() +
geom_vline(xintercept=medianTrCat, col=1, linetype=2)
numTraits.sys1Grp
summ.TI.numTr <- ddply(Trait.Info.1,~ID, summarise,
nTrait=length(unique(Trait.Name)),
nTraitCat=length(unique(Trait.Category.New)))
summ.TI.numTr1<-merge(summ.TI.numTr, id_sys1Grp, by="ID")
#plot
medianTr<-median(summ.TI.numTr1$nTrait, na.rm=T)
numTraits.sys1Grp<-ddply(summ.TI.numTr1, ~sys1Grp, summarize,
mean=mean(nTrait, na.rm=T),
med=median(nTrait, na.rm=T),
min=min(nTrait, na.rm=T),
max=max(nTrait, na.rm=T))
#numTraits.sys1Grp
#paste('Median =',medianTr)
summ.TI.numTr1.1<-subset(summ.TI.numTr1, sys1Grp != 'other')
Plot.numTraits.sys1Grp<-ggplot(summ.TI.numTr1.1, aes(x =nTrait, fill=sys1Grp))+
geom_histogram(binwidth=1)+xlab("Number of traits")+
facet_wrap(~sys1Grp, ncol=2, scales='free_y') +
scale_x_continuous(expand = c(0,0), limits=c(1,50), breaks=c(0,2,5,7,10, 20, 30, 40, 50)) +
scale_y_continuous(expand = c(0,0)) +
ylab("Number of studies")+ theme_bw() +
geom_vline(xintercept=medianTr, col=1, linetype=2)+
scale_fill_manual(name='System and Taxa',
labels=c(sys1Grp_labels),
values=c(sys1Grp_colors)) +
guides(fill=FALSE)
#Plot.numTraits.sys1Grp
#how many trait categories?
medianTrCat<-median(summ.TI.numTr$nTraitCat, na.rm=T)
numTrCat.sys1Grp<-ddply(summ.TI.numTr1, ~sys1Grp, summarize,
mean=mean(nTraitCat, na.rm=T),
med=median(nTraitCat, na.rm=T),
min=min(nTraitCat, na.rm=T),
max=max(nTraitCat, na.rm=T))
#numTrCat.sys1Grp
Plot.numTraitCats<-ggplot(summ.TI.numTr, aes(x =nTraitCat))+
geom_histogram(binwidth=1)+xlab("Number of trait categories")+
scale_x_continuous(expand = c(0,0), breaks=c(1:10), limits=c(1,11)) +
scale_y_continuous(expand = c(0,0)) +
ylab("Number of studies") + theme_bw() +
geom_vline(xintercept=medianTrCat, col=1, linetype=2)
#Plot.numTraitCats
#paste('Median =',medianTrCat)
numTraits.sys1Grp
View(summ.TI.numTr1)
summ.TI.numTr1
id_sys1Grp
grepl("aquatic", summ.TI.numTr1$sys1Grp)
summ.TI.numTr1[grepl("aquatic", summ.TI.numTr1$sys1Grp),]
summ.TI.numTr1[grepl("aquatic", summ.TI.numTr1$sys1Grp),"aquatic"]<-"yes"
summ.TI.numTr1$terrestrial<-"no"
unique(summ.TI.numTr1$sys1Grp)
summ.TI.numTr1$terrestrial<-"no"
summ.TI.numTr1[grepl("terrestrial", summ.TI.numTr1$sys1Grp),"terrestrial"]<-"yes"
numTraits.A<-ddply(summ.TI.numTr1, ~aquatic, summarize,
mean=mean(nTrait, na.rm=T),
med=median(nTrait, na.rm=T),
min=min(nTrait, na.rm=T),
max=max(nTrait, na.rm=T))
numTraits.T<-ddply(summ.TI.numTr1, ~terrestrial, summarize,
mean=mean(nTrait, na.rm=T),
med=median(nTrait, na.rm=T),
min=min(nTrait, na.rm=T),
max=max(nTrait, na.rm=T))
numTraits.A
summ.TI.numTr1$aquatic<-"no"
summ.TI.numTr1[grepl("aquatic", summ.TI.numTr1$sys1Grp),"aquatic"]<-"yes"
summ.TI.numTr1$terrestrial<-"no"
summ.TI.numTr1[grepl("terrestrial", summ.TI.numTr1$sys1Grp),"terrestrial"]<-"yes"
numTraits.A<-ddply(summ.TI.numTr1, ~aquatic, summarize,
mean=mean(nTrait, na.rm=T),
med=median(nTrait, na.rm=T),
min=min(nTrait, na.rm=T),
max=max(nTrait, na.rm=T))
numTraits.T<-ddply(summ.TI.numTr1, ~terrestrial, summarize,
mean=mean(nTrait, na.rm=T),
med=median(nTrait, na.rm=T),
min=min(nTrait, na.rm=T),
max=max(nTrait, na.rm=T))
numTraits.A
numTraits.T
numTraits.A
numTraits.T
numTraits.A
numTraits.T
numTraits.A
numTraits.T
numTraits.sys1Grp
Plot.FD.sys1Grp<-ggplot(topFDmetrics.sys1Grp, aes(x=code, y=nID)) +
geom_bar(stat='identity') +
facet_wrap(~sys1Grp, scales ='free') +
ylab('Number of studies') + xlab('FD metric') +
theme_bw() + theme(axis.text.x = element_text(angle=45, hjust=1))
Plot.FD.sys1Grp
totCode<-length(unique(Metric.Info.1$code))
totCode
unique(Metric.Info.1)
unique(Metric.Info.1$code)
